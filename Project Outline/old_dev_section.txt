/* 
  // Too verbose.

  1. _Designing the Database Schema_ <devPoint1>
    - Defining the structure of the database in order to store game information. Doing this at an early stage of development will lower the amount of database changes required in future. This will consider scalability and maintaining data integrity as primary concerns.
  2. _Implement Basic CRUD#footnote("Creating, Reading, Updating and Deleting.") Operations_
  3. _Designing the User Interface_
    - Designing the UI with a focus on intuitive navigation, a clear layout and efficient interaction. Design mockups will be created to visualise the UI before Implementation, taking the principles set out in the KDE Human Interface Guidelines @kdehig into account.
  4. _Backlog Management_
    - Implementing functionality to allow users to set a games status, such as "playing", "completed" or "abandoned".
  5. _Sorting and Filtering Functionality_ <devPoint5>
    - Implementing the ability to sort and filter through the game list. This will require investigation into algorithms related to fuzzy searching, such as the Levenshtein distance.
  6. _Integration with External APIs_
    - Research and integration of external APIs to automatically fetch game information. The user will be provided with the ability to rank the priority of information from each API.
  7. _Implementation of Tagging System_
  8. _Development of Additional Features_
  9. _Testing and Quality Assurance_
*/
